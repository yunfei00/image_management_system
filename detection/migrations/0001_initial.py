# Generated by Django 5.2.7 on 2025-10-22 12:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("projects", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DetectTool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="工具名称")),
                ("type", models.CharField(max_length=100, verbose_name="类型")),
                ("api_url", models.URLField(max_length=255, verbose_name="API地址")),
                ("config", models.JSONField(verbose_name="配置参数")),
                ("status", models.CharField(max_length=50, verbose_name="状态")),
                ("last_test_time", models.DateTimeField(verbose_name="最后测试时间")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "检测工具",
                "verbose_name_plural": "检测工具管理",
            },
        ),
        migrations.CreateModel(
            name="PreDetectionRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "待检测"),
                            (2, "检测中"),
                            (3, "已完成"),
                            (4, "已失败"),
                        ],
                        default=1,
                        verbose_name="状态",
                    ),
                ),
                (
                    "report_path",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="报告路径"
                    ),
                ),
                (
                    "vulnerability_count",
                    models.IntegerField(default=0, verbose_name="漏洞数量"),
                ),
                (
                    "detect_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="检测时间"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pre_detection_records",
                        to="projects.project",
                        verbose_name="项目",
                    ),
                ),
                (
                    "tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="pre_detection_records",
                        to="detection.detecttool",
                        verbose_name="检测工具",
                    ),
                ),
            ],
            options={
                "verbose_name": "预检测记录",
                "verbose_name_plural": "预检测记录管理",
                "db_table": "pre_detect_records",
            },
        ),
        migrations.CreateModel(
            name="SecurityDetectionApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_paths", models.JSONField(verbose_name="文件路径")),
                ("detect_items", models.JSONField(verbose_name="检测项")),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="检测描述"
                    ),
                ),
                (
                    "assign_team",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="指定检测团队",
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "待检测"),
                            (2, "检测中"),
                            (3, "已完成"),
                            (4, "已失败"),
                        ],
                        default=1,
                        verbose_name="状态",
                    ),
                ),
                (
                    "result",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="检测结果"
                    ),
                ),
                (
                    "feedback",
                    models.TextField(blank=True, null=True, verbose_name="检测反馈"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="security_detection_applications",
                        to="projects.project",
                        verbose_name="项目",
                    ),
                ),
            ],
            options={
                "verbose_name": "安全检测申请",
                "verbose_name_plural": "安全检测申请管理",
                "db_table": "security_detect_apply",
            },
        ),
        migrations.CreateModel(
            name="ProjectDetectTool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("config", models.JSONField(verbose_name="工具配置（JSON）")),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "禁用"), (1, "启用")],
                        default=1,
                        verbose_name="状态",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "detect_tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="project_links",
                        to="detection.detecttool",
                        verbose_name="检测工具",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="detect_tool_links",
                        to="projects.project",
                        verbose_name="项目",
                    ),
                ),
            ],
            options={
                "verbose_name": "项目检测工具配置",
                "verbose_name_plural": "项目检测工具配置",
                "db_table": "project_detect_tools",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("project", "detect_tool"), name="uk_project_tool"
                    )
                ],
            },
        ),
    ]
