容器全生命周期管控系统需求描述文档

版本：V1.0
日期：2025年10月17日

目录
1. 引言 3
   1.1 项目背景 3
   1.2 目标用户 3
   1.3 文档用途 3
2. 系统总体架构 3
   2.1 技术栈建议 3
   2.2 系统模块图 4
3. 功能模块详细描述 4
   3.1 镜像管理 4
      3.1.1 基础镜像管理 4
      3.1.2 业务镜像管理 5
   3.2 项目管理 6
   3.3 系统管理 7
      3.3.1 部门管理 7
      3.3.2 用户管理 7
      3.3.3 角色管理 8
      3.3.4 检测工具管理 8
      3.3.5 日志管理 9
      3.3.6 菜单管理 10
      3.3.7 岗位管理 10
      3.3.8 审批流程配置 11
   3.4 检测管理 11
      3.4.1 检测工具配置 11
      3.4.2 预检测管理 12
   3.5 仓库管理 13
   3.6 安全检测模块 14
      3.6.1 检测申请 14
      3.6.2 检测中心配置 15
   3.7 通知消息模块 16
   3.8 报表模块 16
4. 核心业务流程 17
   4.1 用户注册与权限申请流程 17
   4.2 项目创建流程 17
   4.3 镜像入库流程 18
   4.4 安全检测流程 19
5. 非功能性需求 20
   5.1 性能 20
   5.2 安全 20
   5.3 可用性 20
6. 附录 20
   6.1 数据库ER图 20
   6.2 API接口明细 20
   6.3 界面原型图 20

1. 引言

1.1 项目背景
为提升容器化应用的开发、部署与运维效率，保障镜像安全与合规性，特设计本容器全生命周期管控系统。系统涵盖镜像管理、项目流程、安全检测、仓库管理等功能模块，支持多角色协同操作。

1.2 目标用户
• 业务方用户
• 运维人员
• 系统管理员
• 安全检测人员
• 超级管理员

1.3 文档用途
本文档用于指导开发团队进行系统设计、编码与测试，确保功能实现符合业务需求。

2. 系统总体架构

2.1 技术栈建议
• 前端：Vue.js + Element UI
• 后端：Spring Boot + MySQL + Redis
• 镜像存储：Harbor / Docker Registry
• 安全检测：集成第三方API（如绿盟、小佑、默安等）
• 部署：Kubernetes + Docker

2.2 系统模块图
用户层 → 网关层 → 业务层（镜像/项目/检测/仓库/系统管理）→ 数据层（MySQL、Redis、镜像仓库）

3. 功能模块详细描述

3.1 镜像管理

3.1.1 基础镜像管理



操作流程图：


功能描述
• 用户可查看平台提供的基础镜像及自身有权访问的业务镜像
• 支持按镜像名称、版本、ID等字段进行列表展示与筛选
• 提供基础镜像的下载功能（权限控制）

界面内容
• 搜索栏：镜像名称、版本号、状态
• 列表字段：镜像名称、版本号、镜像ID、创建时间、大小、状态
• 操作按钮：查看详情、下载（权限控制）
• 分类展示：操作系统、中间件、JDK等分类

软件设计方案
• 后端提供RESTful API：/api/images/base
• 数据库表：base_images(id, name, version, image_id, created_at, size, status, category, description)
• 权限控制：基于用户角色和部门权限过滤可见镜像

3.1.2 业务镜像管理

功能描述
• 用户可查看自己申请入库成功的业务镜像
• 镜像状态包括：待检测、检测中、已入库、已拒绝
• 支持业务镜像的申请入库、安全检测等操作

界面内容
• 搜索栏：镜像名称、版本号、检测状态、审批状态
• 列表字段：镜像名称、版本号、镜像ID、创建时间、大小、检测状态、审批状态
• 操作按钮：申请检测、查看报告、下载、入库申请

软件设计方案
• API：/api/images/business
• 表结构：business_images(id, name, version, image_id, project_id, detect_status, approve_status, created_at, size)
• 关联表：projects, detect_records

3.2 项目管理

功能描述
项目列表：显示已有项目
项目创建：输入名称、编码、描述
项目编辑：修改项目信息、状态管理（启用 / 禁用）
成员管理
添加成员：从系统用户中选择，分配项目内角色
编辑成员角色：调整成员在项目中的权限
移除成员：取消成员的项目访问权限
项目隔离：所有资源（镜像、检测任务）绑定项目 ID，查询时自动过滤非权限内项目

界面内容
• 列表字段：项目名称、申请人、部门、提交时间、审批状态、关联镜像
• 操作按钮：新建项目、查看详情、撤销申请、进度查询
• 项目创建表单：项目名称、业务部门、最终用户、项目描述、预计上线时间、基础镜像版本选择、其他组件选择

流程
创建项目--->给该项目选择已有角色或者新建角色--->给相应的角色中添加成员


软件设计方案
• 工作流引擎集成（如Activiti）
• API：/api/projects
• 表：projects(id, name, applicant, department, end_user, description, plan_online_date, status, base_image_version, components)
• 审批流程关联审批流程配置表

3.3 系统管理

3.3.1 部门管理

功能描述
• 管理员可增删改查部门信息，支持导出
• 支持按状态、部门名称搜索

界面内容
• 搜索条件：状态、部门名称
• 列表字段：部门名称、负责人、状态、创建时间
• 操作按钮：新增、编辑、删除、导出
• 部门表单：部门名称、部门编码、负责人、状态

软件设计方案
• API：/api/departments
• 表：departments(id, name, code, leader, status, created_at)

3.3.2 用户管理

功能描述
超管：查看所有项目
普通用户：仅查看自己参与的项目
用户列表：展示所有用户，支持分页、搜索、筛选（状态 / 角色）
用户创建：输入基本信息、分配角色（可关联多个项目）
用户编辑：修改用户信息、状态切换、角色调整
密码重置：管理员可重置用户密码（生成临时密码或强制修改）
用户详情：查看用户基本信息、关联项目及角色、操作日志

界面内容
• 搜索栏：用户名、手机号、状态
• 列表字段：用户名、手机、邮箱、角色、部门、状态
• 操作按钮：新增、编辑、删除、导出
• 用户表单：用户名、密码、手机、邮箱、角色、部门、岗位、状态

流程图

软件设计方案
• API：/api/users
• 表：users(id, username, password, phone, email, role_id, department_id, position_id, status)

3.3.3 角色管理

功能描述
角色列表：展示所有角色，支持搜索、查看权限
角色创建：定义角色名称、编码、描述，分配权限（菜单 + 操作）
角色编辑：修改角色信息、调整权限范围
权限配置：细粒度权限控制（如：镜像管理 - 查看 / 上传 / 删除，检测管理 - 发起 / 查看 / 导出）
预设角色：
超管：所有权限（跨项目查看 / 操作）
项目管理员：项目内所有权限（管理成员、镜像、检测）
业务承建方人员：镜像上传、查看检测结果
审计人员：仅查看镜像和检测结果，无修改权限

界面内容
• 搜索栏：角色名称、权限标识、状态
• 列表字段：角色名、权限列表、状态、创建时间
• 操作按钮：新增、编辑、删除、导出
• 角色表单：角色名称、权限标识、权限列表、状态

流程图

软件设计方案
• API：/api/roles
• 表：roles(id, name, permission_keys, permissions, status, created_at)

3.3.4 检测工具管理

功能描述
• 动态配置第三方检测工具API（如绿盟、小佑、默安等），支持多种检测能力
• 支持检测工具的增删改查和连接测试

界面内容
• 列表字段：工具名称、类型、API地址、状态、最后测试时间
• 操作按钮：新增、编辑、删除、测试连接
• 检测工具表单：工具名称、类型、API地址、配置参数、状态

软件设计方案
• API：/api/detect-tools
• 表：detect_tools(id, name, type, api_url, config, status, last_test_time)

3.3.5 日志管理

登录日志
功能描述
• 记录用户登录信息，支持按时间、状态、用户名、登录IP搜索
• 支持日志的删除和导出

界面内容
• 搜索栏：时间范围、状态、用户名、登录IP
• 列表字段：用户名、登录时间、登录IP、状态、登录结果
• 操作按钮：删除、导出

软件设计方案
• API：/api/logs/login
• 表：login_logs(id, username, login_time, ip, status, result)

操作日志
功能描述
• 记录用户操作信息，支持按时间、系统模块、操作人员、操作IP搜索
• 支持日志的删除和导出

界面内容
• 搜索栏：时间范围、系统模块、操作人员、操作IP
• 列表字段：操作时间、系统模块、操作人员、操作IP、操作内容
• 操作按钮：删除、导出

软件设计方案
• API：/api/logs/operation
• 表：operation_logs(id, module, operator, operation_time, ip, operation_content)

3.3.6 菜单管理

功能描述
• 管理系统菜单结构，支持菜单的增删改查和导出
• 支持按状态、菜单名称搜索

界面内容
• 搜索栏：状态、菜单名称
• 列表字段：菜单名称、菜单路径、图标、排序、状态
• 操作按钮：新增、编辑、删除、导出
• 菜单表单：菜单名称、父菜单、菜单路径、图标、排序、状态

软件设计方案
• API：/api/menus
• 表：menus(id, name, parent_id, path, icon, sort, status)

3.3.7 岗位管理

功能描述
• 管理岗位信息，支持岗位的增删改查和导出
• 支持按状态、岗位名称、岗位编码搜索

界面内容
• 搜索栏：状态、岗位名称、岗位编码
• 列表字段：岗位名称、岗位编码、状态、创建时间
• 操作按钮：新增、编辑、删除、导出
• 岗位表单：岗位名称、岗位编码、状态、描述

软件设计方案
• API：/api/positions
• 表：positions(id, name, code, status, description, created_at)

3.3.8 审批流程配置

功能描述
• 配置镜像入库审批流程，支持流程的增删改查
• 支持按状态、名称搜索

界面内容
• 搜索栏：状态、名称
• 列表字段：流程名称、审批节点、状态、创建时间
• 操作按钮：新增、编辑、删除
• 审批流程表单：流程名称、审批节点配置、状态

软件设计方案
• API：/api/approval-flows
• 表：approval_flows(id, name, nodes_config, status, created_at)

3.4 检测管理

3.4.1 检测工具配置

功能描述
• 用户可为项目选择多个检测工具，形成检测策略
• 支持从检测工具管理中选择已配置的检测工具

界面内容
• 检测工具多选框：列出所有可用的检测工具
• 已选工具列表：显示已选择的检测工具及其状态
• 操作按钮：保存配置、测试连接

软件设计方案
• API：/api/project/{id}/detect-tools
• 关联表：project_detect_tools(project_id, detect_tool_id, config)

3.4.2 预检测管理

功能描述
• 用户通过调用平台SDK发起检测请求，系统生成检测报告并反馈结果
• 支持检测报告的下载和查看

界面内容
• 列表字段：业务方名称、检测项、检测时间、状态、漏洞数量
• 操作按钮：下载报告、重新检测、查看详情
• 检测报告详情：检测结果概览、漏洞详情、修复建议

软件设计方案
• 异步任务处理检测请求
• API：/api/pre-detection
• 表：pre_detect_records(id, project_id, tool_id, status, report_path, vulnerability_count, detect_time)

3.5 仓库管理

功能描述
• 用户可组合已有镜像形成Docker Compose环境，支持打包与下载
• 支持不同环境的镜像组合（系统、测试、生产）
• 用户只能看到自己有权访问的镜像

界面内容
• 仓库列表：仓库名称、类型、镜像数量、镜像列表
• 操作按钮：新增仓库、打包、下载、编辑、删除
• 仓库创建表单：仓库名称、仓库类型、镜像选择、环境配置

软件设计方案
• 使用Docker API进行镜像打包
• API：/api/repositories
• 表：repositories(id, name, type, images_json, environment_config, created_by)
• 镜像打包任务队列处理

3.6 安全检测模块

3.6.1 检测申请

功能描述
• 用户可上传源代码、镜像包等，选择检测工具并提交检测申请
• 支持检测状态跟踪和结果反馈

界面内容
• 上传区域：文件拖拽或选择（支持源代码jar包、镜像包、描述文档）
• 表单字段：检测项目、描述、指定检测团队（可选）
• 状态反馈：通过/未通过及原因
• 检测进度：当前检测阶段、预计完成时间

软件设计方案
• 文件存储建议使用OSS/MinIO
• API：/api/security/apply
• 表：security_detect_apply(id, project_id, file_paths, detect_items, description, assign_team, status, result, feedback)

3.6.2 检测中心配置

功能描述
• 管理员配置检测人员、设备API、审批流程等
• 支持多种检测设备的API配置和管理

界面内容
• 配置项：人员列表、API地址、审批流设置、设备配置
• 操作按钮：新增、编辑、测试API、启用/禁用
• 设备API配置：绿盟API、小佑API、默安等第三方检测平台

软件设计方案
• API：/api/detect-center/config
• 表：detect_center_config(id, name, api_config, approval_flow, device_config, status)
• 设备API管理表：detect_devices(id, name, type, api_url, config, status)

3.7 通知消息模块

功能描述
• 系统在各关键阶段（如审批通过、检测完成）发送通知给用户
• 支持消息的阅读状态管理和分类

界面内容
• 消息列表：时间、类型、内容、状态
• 操作按钮：标记已读、删除、全部已读
• 消息分类：审批通知、检测通知、系统通知

软件设计方案
• 使用WebSocket或消息队列（如RabbitMQ）实现实时通知
• API：/api/notifications
• 表：notifications(id, user_id, content, type, status, created_at)

3.8 报表模块

功能描述
• 生成项目、镜像、业务流程等统计报表，支持导出
• 提供多维度的数据分析和可视化展示

界面内容
• 报表类型选择：项目报表、基础镜像报表、业务镜像报表、业务流程报表
• 图表展示：柱状图、饼图、趋势图、统计表格
• 操作按钮：导出Excel/PDF、刷新、自定义时间段
• 筛选条件：时间范围、项目状态、部门等

软件设计方案
• 使用ECharts生成图表
• API：/api/reports/{type}
• 报表数据表：reports(id, type, data, period, created_at)

4. 核心业务流程

4.1 用户注册与权限申请流程

流程描述：
1. 用户打开登录页面，点击注册申请
2. 填写注册信息：姓名、电话、公司名称、岗位描述、角色选择
3. 提交注册申请，等待管理员审批
4. 管理员审批通过后，系统创建账户并发送通知
5. 用户使用分配的账户登录系统

角色说明：
• 承建方：项目承建人员，具有项目创建和镜像管理权限
• 运维：系统运维人员，具有系统监控和维护权限
• 业务方：业务使用人员，具有镜像使用和项目查看权限
• 管理方：管理人员，具有审批和统计查看权限
• 超级管理员：系统管理员，具有所有权限

4.2 项目创建流程

流程描述：
1. 用户登录系统，点击项目创建
2. 填写项目信息：项目名称、业务部门、最终用户、项目描述、预计上线时间
3. 选择基础镜像版本：操作系统、中间件、JDK等
4. 选择其他组件
5. 提交项目创建申请
6. 管理员审批项目
7. 审批通过后，项目创建成功，用户可进行后续操作

状态跟踪：
• 当前阶段：显示项目当前所处阶段
• 步骤状态：显示各步骤的完成状态

4.3 镜像入库流程

流程描述：
1. 用户登录系统，打开项目页面
2. 点击业务镜像入库申请
3. 上传业务镜像文件
4. 系统自动进行加签操作
5. 进行验签操作（验证基础镜像签名和业务镜像签名）
6. 调用镜像仓库API，将镜像存入待检区
7. 进行安全检测（代码检测、镜像安全检测、动态检测）
8. 检测通过后，申请入产品库
9. 审批通过后，调用镜像仓库API，将镜像存入产品区

关键节点：
• 待检测区：进行安全检测
• 待发布区：确认入库条件（验签状态、安全测试状态、审批流程状态）
• 发布区：正式发布的镜像
• 阿里云仓库区：外部仓库同步

4.4 安全检测流程

流程描述：
1. 用户登录个人账户
2. 进入检测任务页面
3. 系统显示分配的检测任务
4. 用户进行检测操作
5. 检测完成后提交报告并确认是否通过
6. 系统记录检测结果并更新镜像状态

检测类型：
• 代码检测：对源代码进行安全扫描
• 镜像安全检测：对镜像文件进行漏洞扫描
• 动态检测：运行时的安全检测

5. 非功能性需求

5.1 性能
• 镜像列表加载时间 < 2秒
• 支持并发用户数 ≥ 1000
• 镜像上传下载速度 ≥ 50MB/s（依赖网络环境）
• 数据库查询响应时间 < 1秒

5.2 安全
• 镜像验签与加签机制
• 接口权限控制（RBAC）
• 操作日志全记录
• 数据传输加密（HTTPS）
• 敏感数据加密存储

5.3 可用性
• 系统可用性 ≥ 99.9%
• 支持高可用与自动故障转移
• 数据备份与恢复机制
• 系统监控与告警

6. 附录

6.1 数据库ER图
[此处应包含完整的数据库ER图，展示各表之间的关系]

6.2 API接口明细
[此处应列出所有API接口的详细说明，包括请求方法、参数、响应格式等]

6.3 界面原型图
[此处应包含主要界面的原型设计图]

文档版本控制
版本	日期	修改内容	修改人
V1.0	2025-10-17	初始版本创建	XXX